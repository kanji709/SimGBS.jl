name: Test

on:
  push:
    branches: [master]
    tags: ["*"]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        version:
          - 'lts'   # or '1.10'
        os:
          - ubuntu-latest
          - windows-latest
        arch:
          - x64
        include:
          - os: macos-latest
            arch: aarch64
            version: 'lts'
    env:
      JULIA_DEPOT_PATH: ${{ github.workspace }}/.julia-depot
      JULIA_PKG_USE_CLI_GIT: 'true'
      JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
      JULIA_PKG_SERVER: https://pkg.julialang.org
      JULIA_PKG_PRECOMPILE_AUTO: '0'
    continue-on-error: ${{ matrix.version == 'pre' }}

    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - uses: julia-actions/cache@v2
        with:
          cache-registries: "true"
          cache-packages: "true"
          cache-artifacts: "true"

      - name: Remove stale manifests (avoid stdlib/version skew)
        shell: bash
        run: |
          rm -f Manifest.toml
          rm -f docs/Manifest.toml

      - name: Instantiate and precompile
        shell: bash
        run: |
          echo "Depot: $JULIA_DEPOT_PATH"
          julia --project=@. --color=yes --startup-file=no -e 'using Pkg; Pkg.Registry.update(); Pkg.instantiate(); Pkg.precompile()'

      - uses: julia-actions/julia-buildpkg@v1

      - uses: julia-actions/julia-runtest@v1

      - uses: julia-actions/julia-processcoverage@v1

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.version == 'lts'
        uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          fail_ci_if_error: false
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

  CompatHelper:
    name: CompatHelper
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.10'

      - name: Pkg.add("CompatHelper")
        shell: bash
        run: |
          julia --color=yes --startup-file=no -e 'using Pkg; Pkg.add(name="CompatHelper", uuid="aa819f21-2bde-4658-8897-bab36330d9b7", version="3")'

      - name: CompatHelper.main()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          julia --color=yes --startup-file=no -e 'using CompatHelper; CompatHelper.main()'

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
    env:
      JULIA_DEPOT_PATH: ${{ github.workspace }}/.julia-depot
      JULIA_PKG_USE_CLI_GIT: 'true'
      JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
      JULIA_PKG_SERVER: https://pkg.julialang.org
      JULIA_NUM_THREADS: '2'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.10'

      - uses: julia-actions/cache@v2
        with:
          cache-registries: "true"
          cache-packages: "true"
          cache-artifacts: "true"

      - name: Remove stale docs manifest
        shell: bash
        run: |
          rm -f docs/Manifest.toml

      - name: Install dependencies (docs/)
        shell: bash
        run: |
          julia --project=docs --color=yes --startup-file=no -e 'using Pkg; Pkg.Registry.update(); Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate(); Pkg.precompile()'

      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          julia --project=docs --color=yes --startup-file=no -e 'include("docs/make.jl")'

  build:
    name: Formatter
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
      pull-requests: write
    env:
      JULIA_DEPOT_PATH: ${{ github.workspace }}/.julia-depot
    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.10'

      - name: Install JuliaFormatter and format
        shell: bash
        run: |
          julia --color=yes --startup-file=no -e 'using Pkg; Pkg.add("JuliaFormatter"); using JuliaFormatter; format(".")'

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Format .jl files
          title: 'Automatic JuliaFormatter.jl run'
          branch: auto-juliaformatter-pr
          base: master
          delete-branch: true
          labels: formatting, automated pr, no changelog

      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs['pull-request-number'] }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs['pull-request-url'] }}"
